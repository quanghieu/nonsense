/*(Copyright)
 *      Microsoft Copyright 2009 - 2015
 *      All rights reserved.
*/
/*(Auto)
    Automatically Generated by TpmPrototypes version 2.2 February 10, 2016 
    Date: Sep 22, 2016 Time: 05:27:05 PM  
*/

#ifndef    _BITS_FP_H_
#define    _BITS_FP_H_

//*** TestBit()
// This function is used to check the setting of a bit in an array of bits.
// return type: BOOL
//  TRUE    bit is set
//  FALSE   bit is not set
#ifndef INLINE_FUNCTIONS
BOOL
TestBit(
    unsigned int     bitNum,        // IN: number of the bit in 'bArray'
    BYTE            *bArray,        // IN: array containing the bits
    unsigned int     bytesInArray   // IN: size in bytes of 'bArray'
    );
#else
INLINE BOOL
TestBit(
    unsigned int     bitNum,        // IN: number of the bit in 'bArray'
    BYTE            *bArray,        // IN: array containing the bits
    unsigned int     bytesInArray   // IN: size in bytes of 'bArray'
    )
{
    pAssert(bytesInArray > (bitNum >> 3));

    return((bArray[bitNum >> 3] & (1 << (bitNum & 7))) != 0);

}
#endif // INLINE_FUNCTIONS

//*** SetBit()
// This function will set the indicated bit in 'bArray'.
#ifndef INLINE_FUNCTIONS
void
SetBit(
    unsigned int     bitNum,        // IN: number of the bit in 'bArray'
    BYTE            *bArray,        // IN: array containing the bits
    unsigned int     bytesInArray   // IN: size in bytes of 'bArray'
    );
#else
INLINE void
SetBit(
    unsigned int     bitNum,        // IN: number of the bit in 'bArray'
    BYTE            *bArray,        // IN: array containing the bits
    unsigned int     bytesInArray   // IN: size in bytes of 'bArray'
    )
{
    pAssert(bytesInArray > (bitNum >> 3));

    bArray[bitNum >> 3] |= (1 << (bitNum & 7));

}
#endif // INLINE_FUNCTIONS

//*** ClearBit()
// This function will clear the indicated bit in 'bArray'.
#ifndef INLINE_FUNCTIONS
void
ClearBit(
    unsigned int     bitNum,        // IN: number of the bit in 'bArray'.
    BYTE            *bArray,        // IN: array containing the bits
    unsigned int     bytesInArray   // IN: size in bytes of 'bArray'
    );
#else
INLINE void
ClearBit(
    unsigned int     bitNum,        // IN: number of the bit in 'bArray'.
    BYTE            *bArray,        // IN: array containing the bits
    unsigned int     bytesInArray   // IN: size in bytes of 'bArray'
    )
{
    pAssert(bytesInArray > (bitNum >> 3));

    bArray[bitNum >> 3] &= ~(1 << (bitNum & 7));

}
#endif // INLINE_FUNCTIONS


#endif  // _BITS_FP_H_
